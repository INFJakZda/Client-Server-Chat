struct msgbuf {         //struktura odbierania i wysylania komunikatów
	long type;	//10-logowanie 12-wylogowanie... ,{1,2,..,9}-obsługa użytkownika
	char text[200]; //przekazywany sygnał
};

Wiadomości wysyłane o typie:
-10 dla logowania odbierane przez serwer
-100 dla logowania odbierane przez klienta
-dla kolejnych comend wpisywanych przez użytkownika przyjąłem numeracje nr_wiadomosci od 1 do 9 i:
	*kazda wiadomosc do serwera jest typem 10+nr_wiadomości
	*kazda wiadmomość od serwera jest typem 100 + (nr_wiadomosci*11)
-dla wysylania wiadomosci czy do grupy czy do uzytkownika uzytkownik wyslyla wiadomosc:
	*typem = indeks, (indeks- numer uzytkownika nadawany przez serwer)
	*address < 10, gdy wysyla do uzytkownika podaje indeks uzytkownika do ktorego wysyla wiadomosc
	*address > 10, {11,22,33} jest to nr_grupy*11, 
-gdy jest to wiadomosc dla uzytkownika to serwer swapuje mess.type z mess.address ale:
	*mess.type = mess.type*111; 
	*gdy ta wiadomosc ma address < 10 to wie ze jest ona od pojedynczego usera
	*gdy ta wiadomosc ma address > 10 to wie za jest ona od grupy o numerze_grupy*11

struct message {	//struktura wysyłanych wiadomosci tekstowych do uzytkownika czy grupy
	long type;	//od kogo
	char text[400];	//wiadomość
	int address;	//do kogo <1,9> - pojedynczy użytkownik, {11, 22, 33} - grupa 1, 2 i 3.
	time_t msgtime; //czas nadawany przez serwer też miewałem problemy z tą funkcją ale stwierdziłem 
			//ze to nie jest głównym celem tego projektu
};
